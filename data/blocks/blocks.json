[
  {
    "id": "cron_schedule",
    "title": "Cron расписание",
    "category": "Время",
    "kind": "statement",
    "description": "Выполняет блок по cron-выражению.",
    "section": "loop",
    "color": "#8BC34A",
    "params": [
      {
        "name": "expression",
        "type": "string",
        "label": "Cron",
        "default": "* * * * *"
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "expression": "* * * * *"
    },
    "aliases": [
      "TIME_CRON"
    ]
  },
  {
    "id": "delay_us",
    "title": "Пауза, мкс",
    "category": "Время",
    "kind": "statement",
    "description": "Микросекундная задержка.",
    "section": "loop",
    "color": "#8BC34A",
    "params": [
      {
        "name": "us",
        "type": "int",
        "label": "Микросекунды",
        "min": 0,
        "max": 1000000,
        "default": 100
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "us": 100
    },
    "aliases": [
      "TIME_DELAY_MICROS"
    ]
  },
  {
    "id": "delay_ms",
    "title": "Пауза, мс",
    "category": "Время",
    "kind": "statement",
    "description": "Приостанавливает выполнение на указанное время.",
    "section": "loop",
    "color": "#8BC34A",
    "params": [
      {
        "name": "ms",
        "type": "int",
        "label": "Миллисекунды",
        "min": 0,
        "max": 60000,
        "default": 1000
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "ms": 1000
    },
    "aliases": [
      "TIME_DELAY"
    ]
  },
  {
    "id": "scheduler_event",
    "title": "Планировщик задач",
    "category": "Время",
    "kind": "statement",
    "description": "Настраивает выполнение блока по расписанию.",
    "section": "loop",
    "color": "#8BC34A",
    "params": [
      {
        "name": "task",
        "type": "string",
        "label": "Задача",
        "default": "task1"
      },
      {
        "name": "period_ms",
        "type": "int",
        "label": "Период, мс",
        "min": 1,
        "max": 60000,
        "default": 1000
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "task": "task1",
      "period_ms": 1000
    },
    "aliases": [
      "TIME_SCHEDULER"
    ]
  },
  {
    "id": "debounce",
    "title": "Программный антидребезг",
    "category": "Время",
    "kind": "statement",
    "description": "Фильтрует дребезг контактов кнопки.",
    "section": "loop",
    "color": "#8BC34A",
    "params": [
      {
        "name": "pin",
        "type": "int",
        "label": "Пин",
        "min": 0,
        "max": 53,
        "default": 2
      },
      {
        "name": "interval_ms",
        "type": "int",
        "label": "Интервал, мс",
        "min": 1,
        "max": 500,
        "default": 50
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "pin": 2,
      "interval_ms": 50
    },
    "aliases": [
      "TIME_DEBOUNCE"
    ]
  },
  {
    "id": "timer_timeout",
    "title": "Таймаут",
    "category": "Время",
    "kind": "statement",
    "description": "Запускает таймер с отслеживанием истечения времени.",
    "section": "loop",
    "color": "#8BC34A",
    "params": [
      {
        "name": "name",
        "type": "string",
        "label": "Имя",
        "default": "timer1"
      },
      {
        "name": "duration_ms",
        "type": "int",
        "label": "Длительность, мс",
        "min": 1,
        "max": 60000,
        "default": 1000
      },
      {
        "name": "repeat",
        "type": "bool",
        "label": "Повторять",
        "default": false
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "name": "timer1",
      "duration_ms": 1000,
      "repeat": false
    },
    "aliases": [
      "TIME_TIMEOUT"
    ]
  },
  {
    "id": "timer_value",
    "title": "Текущее время",
    "category": "Время",
    "kind": "expression",
    "description": "Получает значение встроенного таймера.",
    "section": "loop",
    "color": "#8BC34A",
    "params": [
      {
        "name": "source",
        "type": "enum",
        "label": "Источник",
        "options": [
          "millis",
          "micros",
          "timestamp"
        ],
        "default": "millis"
      }
    ],
    "ports": {
      "inputs": [],
      "outputs": [
        {
          "name": "value",
          "type": "int"
        }
      ]
    },
    "default_params": {
      "source": "millis"
    },
    "aliases": [
      "TIME_MICROS",
      "TIME_MILLIS",
      "TIME_TIMESTAMP"
    ]
  },
  {
    "id": "motor_stop",
    "title": "Остановить мотор",
    "category": "Движение",
    "kind": "statement",
    "description": "Останавливает мотор и при необходимости включает торможение.",
    "section": "loop",
    "color": "#9C27B0",
    "params": [
      {
        "name": "port",
        "type": "enum",
        "label": "Порт",
        "options": [
          "M1",
          "M2",
          "M3",
          "M4"
        ],
        "default": "M1"
      },
      {
        "name": "brake",
        "type": "bool",
        "label": "Торможение",
        "default": true
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "port": "M1",
      "brake": true
    },
    "aliases": []
  },
  {
    "id": "servo_set",
    "title": "Повернуть сервопривод",
    "category": "Движение",
    "kind": "statement",
    "description": "Задаёт угол сервопривода.",
    "section": "loop",
    "color": "#9C27B0",
    "params": [
      {
        "name": "port",
        "type": "enum",
        "label": "Порт",
        "options": [
          "S1",
          "S2",
          "S3",
          "S4"
        ],
        "default": "S1"
      },
      {
        "name": "angle",
        "type": "int",
        "label": "Угол",
        "min": 0,
        "max": 180,
        "default": 90
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "port": "S1",
      "angle": 90
    },
    "aliases": [
      "MOVE_SERVO_SET_01",
      "MOVE_SERVO_SET_02",
      "MOVE_SERVO_SET_03",
      "MOVE_SERVO_SET_04",
      "MOVE_SERVO_SET_05",
      "MOVE_SERVO_SET_06",
      "MOVE_SERVO_SET_07",
      "MOVE_SERVO_SET_08",
      "MOVE_SERVO_SET_09",
      "MOVE_SERVO_SET_10"
    ]
  },
  {
    "id": "drive_distance",
    "title": "Проехать расстояние",
    "category": "Движение",
    "kind": "statement",
    "description": "Проезжает указанное расстояние с заданной скоростью.",
    "section": "loop",
    "color": "#9C27B0",
    "params": [
      {
        "name": "distance_cm",
        "type": "int",
        "label": "Расстояние, см",
        "min": 0,
        "max": 1000,
        "default": 10
      },
      {
        "name": "speed",
        "type": "int",
        "label": "Скорость",
        "min": 0,
        "max": 100,
        "default": 50
      },
      {
        "name": "direction",
        "type": "enum",
        "label": "Направление",
        "options": [
          "forward",
          "backward"
        ],
        "default": "forward"
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "distance_cm": 10,
      "speed": 50,
      "direction": "forward"
    },
    "aliases": [
      "MOVE_DRIVE_DISTANCE_01",
      "MOVE_DRIVE_DISTANCE_02",
      "MOVE_DRIVE_DISTANCE_03",
      "MOVE_DRIVE_DISTANCE_04",
      "MOVE_DRIVE_DISTANCE_05"
    ]
  },
  {
    "id": "motor_set",
    "title": "Установить скорость мотора",
    "category": "Движение",
    "kind": "statement",
    "description": "Устанавливает скорость двигателя на выбранном порту.",
    "section": "loop",
    "color": "#9C27B0",
    "params": [
      {
        "name": "port",
        "type": "enum",
        "label": "Порт",
        "options": [
          "M1",
          "M2",
          "M3",
          "M4"
        ],
        "default": "M1"
      },
      {
        "name": "speed",
        "type": "int",
        "label": "Скорость",
        "min": 0,
        "max": 100,
        "default": 50
      },
      {
        "name": "direction",
        "type": "enum",
        "label": "Направление",
        "options": [
          "forward",
          "backward"
        ],
        "default": "forward"
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "port": "M1",
      "speed": 50,
      "direction": "forward"
    },
    "aliases": [
      "MOVE_MOTOR_SPEED_01",
      "MOVE_MOTOR_SPEED_02",
      "MOVE_MOTOR_SPEED_03",
      "MOVE_MOTOR_SPEED_04",
      "MOVE_MOTOR_SPEED_05",
      "MOVE_MOTOR_SPEED_06",
      "MOVE_MOTOR_SPEED_07",
      "MOVE_MOTOR_SPEED_08",
      "MOVE_MOTOR_SPEED_09",
      "MOVE_MOTOR_SPEED_10",
      "MOVE_MOTOR_SPEED_11",
      "MOVE_MOTOR_SPEED_12",
      "MOVE_MOTOR_SPEED_13",
      "MOVE_MOTOR_SPEED_14",
      "MOVE_MOTOR_SPEED_15",
      "MOVE_MOTOR_SPEED_16",
      "MOVE_MOTOR_SPEED_17",
      "MOVE_MOTOR_SPEED_18",
      "MOVE_MOTOR_SPEED_19",
      "MOVE_MOTOR_SPEED_20"
    ]
  },
  {
    "id": "assert_condition",
    "title": "Assert",
    "category": "Диагностика",
    "kind": "statement",
    "description": "Проверяет условие и сообщает об ошибке.",
    "section": "loop",
    "color": "#FF5722",
    "params": [
      {
        "name": "condition",
        "type": "bool",
        "label": "Условие",
        "default": true
      },
      {
        "name": "message",
        "type": "string",
        "label": "Сообщение",
        "default": ""
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "condition": true,
      "message": ""
    },
    "aliases": [
      "DIAG_ASSERT"
    ]
  },
  {
    "id": "log_message",
    "title": "Лог",
    "category": "Диагностика",
    "kind": "statement",
    "description": "Выводит сообщение в лог с заданным уровнем.",
    "section": "loop",
    "color": "#FF5722",
    "params": [
      {
        "name": "level",
        "type": "enum",
        "label": "Уровень",
        "options": [
          "info",
          "warn",
          "error"
        ],
        "default": "info"
      },
      {
        "name": "message",
        "type": "string",
        "label": "Сообщение",
        "default": ""
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "level": "info",
      "message": ""
    },
    "aliases": [
      "DIAG_LOG_ERROR",
      "DIAG_LOG_INFO",
      "DIAG_LOG_WARN"
    ]
  },
  {
    "id": "watch_variable",
    "title": "Наблюдение переменной",
    "category": "Диагностика",
    "kind": "statement",
    "description": "Отслеживает изменение переменной.",
    "section": "loop",
    "color": "#FF5722",
    "params": [
      {
        "name": "name",
        "type": "string",
        "label": "Имя",
        "default": "value"
      },
      {
        "name": "interval_ms",
        "type": "int",
        "label": "Период, мс",
        "min": 0,
        "max": 60000,
        "default": 1000
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "name": "value",
      "interval_ms": 1000
    },
    "aliases": [
      "DIAG_WATCH"
    ]
  },
  {
    "id": "telemetry_publish",
    "title": "Отправить телеметрию",
    "category": "Диагностика",
    "kind": "statement",
    "description": "Публикует значение для телеметрии.",
    "section": "loop",
    "color": "#FF5722",
    "params": [
      {
        "name": "key",
        "type": "string",
        "label": "Ключ",
        "default": "sensor"
      },
      {
        "name": "value",
        "type": "any",
        "label": "Значение",
        "default": 0
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "key": "sensor",
      "value": 0
    },
    "aliases": [
      "DIAG_PUBLISH"
    ]
  },
  {
    "id": "profiler_control",
    "title": "Профилировщик",
    "category": "Диагностика",
    "kind": "statement",
    "description": "Управляет профилировщиком.",
    "section": "loop",
    "color": "#FF5722",
    "params": [
      {
        "name": "action",
        "type": "enum",
        "label": "Действие",
        "options": [
          "start",
          "stop"
        ],
        "default": "start"
      },
      {
        "name": "label",
        "type": "string",
        "label": "Метка",
        "default": "block"
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "action": "start",
      "label": "block"
    },
    "aliases": [
      "DIAG_PROFILER_START",
      "DIAG_PROFILER_STOP"
    ]
  },
  {
    "id": "i2c_transfer",
    "title": "I2C операция",
    "category": "Коммуникации",
    "kind": "statement",
    "description": "Выполняет операцию I2C: инициализация, чтение или запись.",
    "section": "loop",
    "color": "#00BCD4",
    "params": [
      {
        "name": "mode",
        "type": "enum",
        "label": "Режим",
        "options": [
          "begin",
          "write",
          "read"
        ],
        "default": "begin"
      },
      {
        "name": "address",
        "type": "int",
        "label": "Адрес",
        "min": 0,
        "max": 127,
        "default": 8
      },
      {
        "name": "data",
        "type": "string",
        "label": "Данные",
        "default": ""
      },
      {
        "name": "length",
        "type": "int",
        "label": "Количество",
        "min": 0,
        "max": 32,
        "default": 1
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "mode": "begin",
      "address": 8,
      "data": "",
      "length": 1
    },
    "aliases": [
      "COMM_I2C_BEGIN",
      "COMM_I2C_READ",
      "COMM_I2C_WRITE"
    ]
  },
  {
    "id": "mqtt_publish",
    "title": "MQTT publish",
    "category": "Коммуникации",
    "kind": "statement",
    "description": "Отправляет сообщение на MQTT брокер.",
    "section": "loop",
    "color": "#00BCD4",
    "params": [
      {
        "name": "topic",
        "type": "string",
        "label": "Топик",
        "default": "robolab"
      },
      {
        "name": "payload",
        "type": "string",
        "label": "Сообщение",
        "default": ""
      },
      {
        "name": "retain",
        "type": "bool",
        "label": "Retain",
        "default": false
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "topic": "robolab",
      "payload": "",
      "retain": false
    },
    "aliases": [
      "COMM_MQTT_PUBLISH"
    ]
  },
  {
    "id": "spi_transfer",
    "title": "SPI операция",
    "category": "Коммуникации",
    "kind": "statement",
    "description": "Инициализирует или выполняет обмен по SPI.",
    "section": "loop",
    "color": "#00BCD4",
    "params": [
      {
        "name": "mode",
        "type": "enum",
        "label": "Режим",
        "options": [
          "begin",
          "transfer"
        ],
        "default": "begin"
      },
      {
        "name": "value",
        "type": "int",
        "label": "Данные",
        "default": 0
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "mode": "begin",
      "value": 0
    },
    "aliases": [
      "COMM_SPI_BEGIN",
      "COMM_SPI_TRANSFER"
    ]
  },
  {
    "id": "serial_begin",
    "title": "Serial.begin",
    "category": "Коммуникации",
    "kind": "statement",
    "description": "Инициализирует последовательный порт.",
    "section": "loop",
    "color": "#00BCD4",
    "params": [
      {
        "name": "baud",
        "type": "int",
        "label": "Скорость",
        "min": 300,
        "max": 2000000,
        "default": 9600
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "baud": 9600
    },
    "aliases": [
      "COMM_SERIAL_BEGIN"
    ]
  },
  {
    "id": "serial_print",
    "title": "Serial.print",
    "category": "Коммуникации",
    "kind": "statement",
    "description": "Отправляет текст в последовательный порт.",
    "section": "loop",
    "color": "#00BCD4",
    "params": [
      {
        "name": "text",
        "type": "string",
        "label": "Текст",
        "default": "Hello"
      },
      {
        "name": "mode",
        "type": "enum",
        "label": "Режим",
        "options": [
          "print",
          "println"
        ],
        "default": "print"
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "text": "Hello",
      "mode": "print"
    },
    "aliases": [
      "COMM_SERIAL_PRINT",
      "COMM_SERIAL_PRINTLN"
    ]
  },
  {
    "id": "serial_read_string",
    "title": "Serial.readString",
    "category": "Коммуникации",
    "kind": "expression",
    "description": "Читает строку из последовательного порта.",
    "section": "loop",
    "color": "#00BCD4",
    "params": [],
    "ports": {
      "inputs": [],
      "outputs": [
        {
          "name": "value",
          "type": "string"
        }
      ]
    },
    "default_params": {},
    "aliases": [
      "COMM_SERIAL_READ"
    ]
  },
  {
    "id": "wifi_connect",
    "title": "Wi-Fi подключение",
    "category": "Коммуникации",
    "kind": "statement",
    "description": "Подключается к Wi-Fi сети.",
    "section": "loop",
    "color": "#00BCD4",
    "params": [
      {
        "name": "ssid",
        "type": "string",
        "label": "SSID",
        "default": "MyWiFi"
      },
      {
        "name": "password",
        "type": "string",
        "label": "Пароль",
        "default": "password"
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "ssid": "MyWiFi",
      "password": "password"
    },
    "aliases": [
      "COMM_WIFI_CONNECT"
    ]
  },
  {
    "id": "bluetooth_send",
    "title": "Отправить по Bluetooth",
    "category": "Коммуникации",
    "kind": "statement",
    "description": "Передаёт сообщение через Bluetooth-модуль.",
    "section": "loop",
    "color": "#00BCD4",
    "params": [
      {
        "name": "text",
        "type": "string",
        "label": "Текст",
        "default": ""
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "text": ""
    },
    "aliases": [
      "COMM_BT_SEND"
    ]
  },
  {
    "id": "logic_switch",
    "title": "Switch",
    "category": "Логика",
    "kind": "statement",
    "description": "Выполняет ветки в зависимости от значения.",
    "section": "loop",
    "color": "#4CAF50",
    "params": [
      {
        "name": "value",
        "type": "any",
        "label": "Выражение"
      },
      {
        "name": "cases",
        "type": "string",
        "label": "Варианты",
        "default": ""
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "value": null,
      "cases": ""
    },
    "aliases": [
      "LOGIC_SWITCH"
    ]
  },
  {
    "id": "logic_and",
    "title": "Логическое И",
    "category": "Логика",
    "kind": "expression",
    "description": "Возвращает истинно, если оба условия истинны.",
    "section": "loop",
    "color": "#4CAF50",
    "params": [
      {
        "name": "a",
        "type": "bool",
        "label": "A",
        "default": true
      },
      {
        "name": "b",
        "type": "bool",
        "label": "B",
        "default": true
      }
    ],
    "ports": {
      "inputs": [],
      "outputs": [
        {
          "name": "value",
          "type": "bool"
        }
      ]
    },
    "default_params": {
      "a": true,
      "b": true
    },
    "aliases": [
      "LOGIC_AND"
    ]
  },
  {
    "id": "logic_or",
    "title": "Логическое ИЛИ",
    "category": "Логика",
    "kind": "expression",
    "description": "Возвращает истинно, если хотя бы одно условие истинно.",
    "section": "loop",
    "color": "#4CAF50",
    "params": [
      {
        "name": "a",
        "type": "bool",
        "label": "A",
        "default": false
      },
      {
        "name": "b",
        "type": "bool",
        "label": "B",
        "default": false
      }
    ],
    "ports": {
      "inputs": [],
      "outputs": [
        {
          "name": "value",
          "type": "bool"
        }
      ]
    },
    "default_params": {
      "a": false,
      "b": false
    },
    "aliases": [
      "LOGIC_OR"
    ]
  },
  {
    "id": "logic_not",
    "title": "Логическое НЕ",
    "category": "Логика",
    "kind": "expression",
    "description": "Инвертирует булево значение.",
    "section": "loop",
    "color": "#4CAF50",
    "params": [
      {
        "name": "value",
        "type": "bool",
        "label": "Значение",
        "default": false
      }
    ],
    "ports": {
      "inputs": [],
      "outputs": [
        {
          "name": "value",
          "type": "bool"
        }
      ]
    },
    "default_params": {
      "value": false
    },
    "aliases": [
      "LOGIC_NOT"
    ]
  },
  {
    "id": "logic_assert",
    "title": "Проверка условия",
    "category": "Логика",
    "kind": "statement",
    "description": "Вызывает ошибку, если условие ложно.",
    "section": "loop",
    "color": "#4CAF50",
    "params": [
      {
        "name": "condition",
        "type": "bool",
        "label": "Условие",
        "default": true
      },
      {
        "name": "message",
        "type": "string",
        "label": "Сообщение",
        "default": ""
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "condition": true,
      "message": ""
    },
    "aliases": [
      "LOGIC_ASSERT"
    ]
  },
  {
    "id": "logic_compare",
    "title": "Сравнение",
    "category": "Логика",
    "kind": "expression",
    "description": "Сравнивает два значения выбранным оператором.",
    "section": "loop",
    "color": "#4CAF50",
    "params": [
      {
        "name": "left",
        "type": "any",
        "label": "Левый операнд"
      },
      {
        "name": "right",
        "type": "any",
        "label": "Правый операнд"
      },
      {
        "name": "operator",
        "type": "enum",
        "label": "Оператор",
        "options": [
          "==",
          "!=",
          ">",
          ">=",
          "<",
          "<="
        ],
        "default": "=="
      }
    ],
    "ports": {
      "inputs": [],
      "outputs": [
        {
          "name": "value",
          "type": "bool"
        }
      ]
    },
    "default_params": {
      "operator": "=="
    },
    "aliases": [
      "LOGIC_EQ",
      "LOGIC_GT",
      "LOGIC_GTE",
      "LOGIC_LT",
      "LOGIC_LTE",
      "LOGIC_NE"
    ]
  },
  {
    "id": "logic_ternary",
    "title": "Тернарный оператор",
    "category": "Логика",
    "kind": "expression",
    "description": "Возвращает одно из значений в зависимости от условия.",
    "section": "loop",
    "color": "#4CAF50",
    "params": [
      {
        "name": "condition",
        "type": "bool",
        "label": "Условие",
        "default": true
      },
      {
        "name": "if_true",
        "type": "any",
        "label": "Если да"
      },
      {
        "name": "if_false",
        "type": "any",
        "label": "Если нет"
      }
    ],
    "ports": {
      "inputs": [],
      "outputs": [
        {
          "name": "value",
          "type": "any"
        }
      ]
    },
    "default_params": {
      "condition": true
    },
    "aliases": [
      "LOGIC_TERNARY"
    ]
  },
  {
    "id": "math_div",
    "title": "Деление",
    "category": "Математика",
    "kind": "expression",
    "description": "Делит одно число на другое.",
    "section": "loop",
    "color": "#2E7D32",
    "params": [
      {
        "name": "a",
        "type": "number",
        "label": "Числитель",
        "default": 1
      },
      {
        "name": "b",
        "type": "number",
        "label": "Знаменатель",
        "default": 1
      }
    ],
    "ports": {
      "inputs": [],
      "outputs": [
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "default_params": {
      "a": 1,
      "b": 1
    },
    "aliases": [
      "MATH_DIV"
    ]
  },
  {
    "id": "math_extrema",
    "title": "Мин/Макс",
    "category": "Математика",
    "kind": "expression",
    "description": "Находит минимум или максимум двух значений.",
    "section": "loop",
    "color": "#2E7D32",
    "params": [
      {
        "name": "a",
        "type": "number",
        "label": "A",
        "default": 0
      },
      {
        "name": "b",
        "type": "number",
        "label": "B",
        "default": 0
      },
      {
        "name": "mode",
        "type": "enum",
        "label": "Режим",
        "options": [
          "min",
          "max"
        ],
        "default": "min"
      }
    ],
    "ports": {
      "inputs": [],
      "outputs": [
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "default_params": {
      "a": 0,
      "b": 0,
      "mode": "min"
    },
    "aliases": [
      "MATH_MAX",
      "MATH_MIN"
    ]
  },
  {
    "id": "math_abs",
    "title": "Модуль",
    "category": "Математика",
    "kind": "expression",
    "description": "Возвращает модуль числа.",
    "section": "loop",
    "color": "#2E7D32",
    "params": [
      {
        "name": "value",
        "type": "number",
        "label": "Число",
        "default": 0
      }
    ],
    "ports": {
      "inputs": [],
      "outputs": [
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "default_params": {
      "value": 0
    },
    "aliases": [
      "MATH_ABS"
    ]
  },
  {
    "id": "math_clamp",
    "title": "Ограничение",
    "category": "Математика",
    "kind": "expression",
    "description": "Ограничивает значение заданным диапазоном.",
    "section": "loop",
    "color": "#2E7D32",
    "params": [
      {
        "name": "value",
        "type": "number",
        "label": "Значение",
        "default": 0
      },
      {
        "name": "min",
        "type": "number",
        "label": "Мин",
        "default": 0
      },
      {
        "name": "max",
        "type": "number",
        "label": "Макс",
        "default": 100
      }
    ],
    "ports": {
      "inputs": [],
      "outputs": [
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "default_params": {
      "value": 0,
      "min": 0,
      "max": 100
    },
    "aliases": [
      "MATH_CLAMP"
    ]
  },
  {
    "id": "math_mod",
    "title": "Остаток",
    "category": "Математика",
    "kind": "expression",
    "description": "Возвращает остаток от деления.",
    "section": "loop",
    "color": "#2E7D32",
    "params": [
      {
        "name": "a",
        "type": "int",
        "label": "Делимое",
        "default": 0
      },
      {
        "name": "b",
        "type": "int",
        "label": "Делитель",
        "default": 1
      }
    ],
    "ports": {
      "inputs": [],
      "outputs": [
        {
          "name": "value",
          "type": "int"
        }
      ]
    },
    "default_params": {
      "a": 0,
      "b": 1
    },
    "aliases": [
      "MATH_MOD"
    ]
  },
  {
    "id": "math_map",
    "title": "Преобразование диапазона",
    "category": "Математика",
    "kind": "expression",
    "description": "Пересчитывает число из одного диапазона в другой.",
    "section": "loop",
    "color": "#2E7D32",
    "params": [
      {
        "name": "value",
        "type": "number",
        "label": "Значение",
        "default": 0
      },
      {
        "name": "in_min",
        "type": "number",
        "label": "Вход мин",
        "default": 0
      },
      {
        "name": "in_max",
        "type": "number",
        "label": "Вход макс",
        "default": 1023
      },
      {
        "name": "out_min",
        "type": "number",
        "label": "Выход мин",
        "default": 0
      },
      {
        "name": "out_max",
        "type": "number",
        "label": "Выход макс",
        "default": 255
      }
    ],
    "ports": {
      "inputs": [],
      "outputs": [
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "default_params": {
      "value": 0,
      "in_min": 0,
      "in_max": 1023,
      "out_min": 0,
      "out_max": 255
    },
    "aliases": [
      "MATH_MAP"
    ]
  },
  {
    "id": "math_mul",
    "title": "Произведение",
    "category": "Математика",
    "kind": "expression",
    "description": "Перемножает два числа.",
    "section": "loop",
    "color": "#2E7D32",
    "params": [
      {
        "name": "a",
        "type": "number",
        "label": "A",
        "default": 1
      },
      {
        "name": "b",
        "type": "number",
        "label": "B",
        "default": 1
      }
    ],
    "ports": {
      "inputs": [],
      "outputs": [
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "default_params": {
      "a": 1,
      "b": 1
    },
    "aliases": [
      "MATH_MUL"
    ]
  },
  {
    "id": "math_sub",
    "title": "Разность",
    "category": "Математика",
    "kind": "expression",
    "description": "Вычитает второе число из первого.",
    "section": "loop",
    "color": "#2E7D32",
    "params": [
      {
        "name": "a",
        "type": "number",
        "label": "A",
        "default": 0
      },
      {
        "name": "b",
        "type": "number",
        "label": "B",
        "default": 0
      }
    ],
    "ports": {
      "inputs": [],
      "outputs": [
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "default_params": {
      "a": 0,
      "b": 0
    },
    "aliases": [
      "MATH_SUB"
    ]
  },
  {
    "id": "math_random",
    "title": "Случайное значение",
    "category": "Математика",
    "kind": "expression",
    "description": "Возвращает случайное число в заданном диапазоне.",
    "section": "loop",
    "color": "#2E7D32",
    "params": [
      {
        "name": "mode",
        "type": "enum",
        "label": "Тип",
        "options": [
          "int",
          "float"
        ],
        "default": "int"
      },
      {
        "name": "min",
        "type": "number",
        "label": "Минимум",
        "default": 0
      },
      {
        "name": "max",
        "type": "number",
        "label": "Максимум",
        "default": 100
      }
    ],
    "ports": {
      "inputs": [],
      "outputs": [
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "default_params": {
      "mode": "int",
      "min": 0,
      "max": 100
    },
    "aliases": [
      "MATH_RANDOM_FLOAT",
      "MATH_RANDOM_INT"
    ]
  },
  {
    "id": "math_add",
    "title": "Сумма",
    "category": "Математика",
    "kind": "expression",
    "description": "Складывает два числа.",
    "section": "loop",
    "color": "#2E7D32",
    "params": [
      {
        "name": "a",
        "type": "number",
        "label": "A",
        "default": 0
      },
      {
        "name": "b",
        "type": "number",
        "label": "B",
        "default": 0
      }
    ],
    "ports": {
      "inputs": [],
      "outputs": [
        {
          "name": "value",
          "type": "number"
        }
      ]
    },
    "default_params": {
      "a": 0,
      "b": 0
    },
    "aliases": [
      "MATH_ADD"
    ]
  },
  {
    "id": "var_change",
    "title": "Изменить на",
    "category": "Переменные",
    "kind": "statement",
    "description": "Увеличивает или уменьшает переменную на значение.",
    "section": "loop",
    "color": "#F06292",
    "params": [
      {
        "name": "name",
        "type": "string",
        "label": "Имя",
        "default": "value"
      },
      {
        "name": "delta",
        "type": "number",
        "label": "Изменение",
        "default": 1
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "name": "value",
      "delta": 1
    },
    "aliases": [
      "VAR_DEC",
      "VAR_INC"
    ]
  },
  {
    "id": "var_toggle",
    "title": "Инвертировать bool",
    "category": "Переменные",
    "kind": "statement",
    "description": "Инвертирует логическую переменную.",
    "section": "loop",
    "color": "#F06292",
    "params": [
      {
        "name": "name",
        "type": "string",
        "label": "Имя",
        "default": "flag"
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "name": "flag"
    },
    "aliases": [
      "VAR_BOOL_TOGGLE"
    ]
  },
  {
    "id": "random_seed",
    "title": "Инициализация random",
    "category": "Переменные",
    "kind": "statement",
    "description": "Устанавливает зерно генератора случайных чисел.",
    "section": "loop",
    "color": "#F06292",
    "params": [
      {
        "name": "seed",
        "type": "int",
        "label": "Seed",
        "default": 1
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "seed": 1
    },
    "aliases": [
      "VAR_RANDOM_SEED"
    ]
  },
  {
    "id": "var_array_access",
    "title": "Массив",
    "category": "Переменные",
    "kind": "statement",
    "description": "Читает или записывает элемент массива.",
    "section": "loop",
    "color": "#F06292",
    "params": [
      {
        "name": "name",
        "type": "string",
        "label": "Имя",
        "default": "arr"
      },
      {
        "name": "index",
        "type": "int",
        "label": "Индекс",
        "min": 0,
        "max": 127,
        "default": 0
      },
      {
        "name": "mode",
        "type": "enum",
        "label": "Режим",
        "options": [
          "set",
          "get"
        ],
        "default": "set"
      },
      {
        "name": "value",
        "type": "any",
        "label": "Значение",
        "default": 0
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "name": "arr",
      "index": 0,
      "mode": "set",
      "value": 0
    },
    "aliases": [
      "VAR_ARRAY_GET",
      "VAR_ARRAY_SET"
    ]
  },
  {
    "id": "var_declare",
    "title": "Объявить переменную",
    "category": "Переменные",
    "kind": "statement",
    "description": "Создаёт новую переменную указанного типа.",
    "section": "loop",
    "color": "#F06292",
    "params": [
      {
        "name": "name",
        "type": "string",
        "label": "Имя",
        "default": "value"
      },
      {
        "name": "var_type",
        "type": "enum",
        "label": "Тип",
        "options": [
          "int",
          "float",
          "bool",
          "string"
        ],
        "default": "int"
      },
      {
        "name": "initial",
        "type": "any",
        "label": "Начальное значение",
        "default": 0
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "name": "value",
      "var_type": "int",
      "initial": 0
    },
    "aliases": [
      "VAR_DECLARE_FLOAT",
      "VAR_DECLARE_INT"
    ]
  },
  {
    "id": "var_get",
    "title": "Получить переменную",
    "category": "Переменные",
    "kind": "expression",
    "description": "Возвращает текущее значение переменной.",
    "section": "loop",
    "color": "#F06292",
    "params": [
      {
        "name": "name",
        "type": "string",
        "label": "Имя",
        "default": "value"
      }
    ],
    "ports": {
      "inputs": [],
      "outputs": [
        {
          "name": "value",
          "type": "any"
        }
      ]
    },
    "default_params": {
      "name": "value"
    },
    "aliases": [
      "VAR_GET"
    ]
  },
  {
    "id": "var_set",
    "title": "Присвоить",
    "category": "Переменные",
    "kind": "statement",
    "description": "Устанавливает значение переменной.",
    "section": "loop",
    "color": "#F06292",
    "params": [
      {
        "name": "name",
        "type": "string",
        "label": "Имя",
        "default": "value"
      },
      {
        "name": "value",
        "type": "any",
        "label": "Значение",
        "default": 0
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "name": "value",
      "value": 0
    },
    "aliases": [
      "VAR_RESET",
      "VAR_SET"
    ]
  },
  {
    "id": "var_array_declare",
    "title": "Создать массив",
    "category": "Переменные",
    "kind": "statement",
    "description": "Объявляет массив указанного размера.",
    "section": "loop",
    "color": "#F06292",
    "params": [
      {
        "name": "name",
        "type": "string",
        "label": "Имя",
        "default": "arr"
      },
      {
        "name": "size",
        "type": "int",
        "label": "Размер",
        "min": 1,
        "max": 128,
        "default": 8
      },
      {
        "name": "var_type",
        "type": "enum",
        "label": "Тип",
        "options": [
          "int",
          "float",
          "bool"
        ],
        "default": "int"
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "name": "arr",
      "size": 8,
      "var_type": "int"
    },
    "aliases": [
      "VAR_ARRAY_DECLARE"
    ]
  },
  {
    "id": "custom_code",
    "title": "Пользовательский код",
    "category": "Пользовательские",
    "kind": "statement",
    "description": "Вставляет произвольный код пользователя.",
    "section": "loop",
    "color": "#9E9E9E",
    "params": [
      {
        "name": "code",
        "type": "string",
        "label": "Код",
        "default": ""
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "code": ""
    },
    "aliases": [
      "CUSTOM_SNIPPET_01",
      "CUSTOM_SNIPPET_02",
      "CUSTOM_SNIPPET_03",
      "CUSTOM_SNIPPET_04",
      "CUSTOM_SNIPPET_05",
      "CUSTOM_SNIPPET_06",
      "CUSTOM_SNIPPET_07"
    ]
  },
  {
    "id": "rgb_set",
    "title": "RGB цвет",
    "category": "Свет и звук",
    "kind": "statement",
    "description": "Устанавливает цвет RGB-светодиода.",
    "section": "loop",
    "color": "#FFC107",
    "params": [
      {
        "name": "pin",
        "type": "int",
        "label": "Пин",
        "min": 0,
        "max": 53,
        "default": 6
      },
      {
        "name": "r",
        "type": "int",
        "label": "Красный",
        "min": 0,
        "max": 255,
        "default": 255
      },
      {
        "name": "g",
        "type": "int",
        "label": "Зелёный",
        "min": 0,
        "max": 255,
        "default": 0
      },
      {
        "name": "b",
        "type": "int",
        "label": "Синий",
        "min": 0,
        "max": 255,
        "default": 0
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "pin": 6,
      "r": 255,
      "g": 0,
      "b": 0
    },
    "aliases": []
  },
  {
    "id": "tone_play",
    "title": "Звук",
    "category": "Свет и звук",
    "kind": "statement",
    "description": "Проигрывает тон на пьезоизлучателе.",
    "section": "loop",
    "color": "#FFC107",
    "params": [
      {
        "name": "pin",
        "type": "int",
        "label": "Пин",
        "min": 0,
        "max": 53,
        "default": 8
      },
      {
        "name": "frequency",
        "type": "int",
        "label": "Частота, Гц",
        "min": 20,
        "max": 20000,
        "default": 440
      },
      {
        "name": "duration_ms",
        "type": "int",
        "label": "Длительность, мс",
        "min": 0,
        "max": 10000,
        "default": 500
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "pin": 8,
      "frequency": 440,
      "duration_ms": 500
    },
    "aliases": [
      "LIGHT_TONE_01",
      "LIGHT_TONE_02",
      "LIGHT_TONE_03",
      "LIGHT_TONE_04",
      "LIGHT_TONE_05"
    ]
  },
  {
    "id": "led_set",
    "title": "Светодиод",
    "category": "Свет и звук",
    "kind": "statement",
    "description": "Управляет состоянием светодиода на пине.",
    "section": "loop",
    "color": "#FFC107",
    "params": [
      {
        "name": "pin",
        "type": "int",
        "label": "Пин",
        "min": 0,
        "max": 53,
        "default": 13
      },
      {
        "name": "state",
        "type": "enum",
        "label": "Состояние",
        "options": [
          "on",
          "off"
        ],
        "default": "on"
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "pin": 13,
      "state": "on"
    },
    "aliases": [
      "LIGHT_LED_ON_01",
      "LIGHT_LED_ON_02",
      "LIGHT_LED_ON_03",
      "LIGHT_LED_ON_04",
      "LIGHT_LED_ON_05",
      "LIGHT_LED_ON_06",
      "LIGHT_LED_ON_07",
      "LIGHT_LED_ON_08",
      "LIGHT_LED_ON_09",
      "LIGHT_LED_ON_10",
      "LIGHT_LED_ON_11",
      "LIGHT_LED_ON_12",
      "LIGHT_LED_ON_13",
      "LIGHT_LED_ON_14",
      "LIGHT_LED_ON_15"
    ]
  },
  {
    "id": "analog_read",
    "title": "Аналоговый вход",
    "category": "Сенсоры",
    "kind": "expression",
    "description": "Читает значение аналогового входа.",
    "section": "loop",
    "color": "#03A9F4",
    "params": [
      {
        "name": "pin",
        "type": "int",
        "label": "Пин",
        "min": 0,
        "max": 15,
        "default": 0
      }
    ],
    "ports": {
      "inputs": [],
      "outputs": [
        {
          "name": "value",
          "type": "int"
        }
      ]
    },
    "default_params": {
      "pin": 0
    },
    "aliases": [
      "SENS_ANALOG_READ_01",
      "SENS_ANALOG_READ_02",
      "SENS_ANALOG_READ_03",
      "SENS_ANALOG_READ_04",
      "SENS_ANALOG_READ_05",
      "SENS_ANALOG_READ_06",
      "SENS_ANALOG_READ_07",
      "SENS_ANALOG_READ_08",
      "SENS_ANALOG_READ_09",
      "SENS_ANALOG_READ_10"
    ]
  },
  {
    "id": "ultrasonic_read",
    "title": "Ультразвуковой датчик",
    "category": "Сенсоры",
    "kind": "expression",
    "description": "Измеряет расстояние ультразвуковым датчиком.",
    "section": "loop",
    "color": "#03A9F4",
    "params": [
      {
        "name": "trig_pin",
        "type": "int",
        "label": "TRIG",
        "min": 0,
        "max": 53,
        "default": 12
      },
      {
        "name": "echo_pin",
        "type": "int",
        "label": "ECHO",
        "min": 0,
        "max": 53,
        "default": 11
      },
      {
        "name": "units",
        "type": "enum",
        "label": "Единицы",
        "options": [
          "cm",
          "mm"
        ],
        "default": "cm"
      }
    ],
    "ports": {
      "inputs": [],
      "outputs": [
        {
          "name": "value",
          "type": "float"
        }
      ]
    },
    "default_params": {
      "trig_pin": 12,
      "echo_pin": 11,
      "units": "cm"
    },
    "aliases": [
      "SENS_ULTRASONIC_01",
      "SENS_ULTRASONIC_02",
      "SENS_ULTRASONIC_03",
      "SENS_ULTRASONIC_04",
      "SENS_ULTRASONIC_05",
      "SENS_ULTRASONIC_06",
      "SENS_ULTRASONIC_07",
      "SENS_ULTRASONIC_08",
      "SENS_ULTRASONIC_09",
      "SENS_ULTRASONIC_10",
      "SENS_ULTRASONIC_11",
      "SENS_ULTRASONIC_12",
      "SENS_ULTRASONIC_13",
      "SENS_ULTRASONIC_14",
      "SENS_ULTRASONIC_15"
    ]
  },
  {
    "id": "digital_read",
    "title": "Цифровой вход",
    "category": "Сенсоры",
    "kind": "expression",
    "description": "Читает состояние цифрового входа.",
    "section": "loop",
    "color": "#03A9F4",
    "params": [
      {
        "name": "pin",
        "type": "int",
        "label": "Пин",
        "min": 0,
        "max": 53,
        "default": 2
      }
    ],
    "ports": {
      "inputs": [],
      "outputs": [
        {
          "name": "value",
          "type": "bool"
        }
      ]
    },
    "default_params": {
      "pin": 2
    },
    "aliases": [
      "SENS_BUTTON_01",
      "SENS_BUTTON_02",
      "SENS_BUTTON_03",
      "SENS_BUTTON_04",
      "SENS_BUTTON_05"
    ]
  },
  {
    "id": "emergency_stop",
    "title": "Аварийный стоп",
    "category": "Система",
    "kind": "statement",
    "description": "Мгновенно останавливает выполнение и выключает моторы.",
    "section": "loop",
    "color": "#546E7A",
    "params": [
      {
        "name": "message",
        "type": "string",
        "label": "Сообщение",
        "default": ""
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "message": ""
    },
    "aliases": [
      "SYS_EMERGENCY_STOP"
    ]
  },
  {
    "id": "delay_safe",
    "title": "Безопасная задержка",
    "category": "Система",
    "kind": "statement",
    "description": "Выполняет задержку с обслуживанием событий.",
    "section": "loop",
    "color": "#546E7A",
    "params": [
      {
        "name": "ms",
        "type": "int",
        "label": "Миллисекунды",
        "min": 0,
        "max": 60000,
        "default": 1000
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "ms": 1000
    },
    "aliases": [
      "SYS_DELAY_SAFE"
    ]
  },
  {
    "id": "include_header",
    "title": "Добавить include",
    "category": "Система",
    "kind": "statement",
    "description": "Добавляет директиву #include.",
    "section": "loop",
    "color": "#546E7A",
    "params": [
      {
        "name": "header",
        "type": "string",
        "label": "Файл",
        "default": "<Arduino.h>"
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "header": "<Arduino.h>"
    },
    "aliases": [
      "SYS_INCLUDE"
    ]
  },
  {
    "id": "section_marker",
    "title": "Маркер области",
    "category": "Система",
    "kind": "statement",
    "description": "Вставляет код в выбранный раздел скетча.",
    "section": "loop",
    "color": "#546E7A",
    "params": [
      {
        "name": "section",
        "type": "enum",
        "label": "Раздел",
        "options": [
          "setup",
          "loop"
        ],
        "default": "loop"
      },
      {
        "name": "code",
        "type": "string",
        "label": "Код",
        "default": ""
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "section": "loop",
      "code": ""
    },
    "aliases": [
      "SYS_LOOP_MARK",
      "SYS_SETUP_MARK"
    ]
  },
  {
    "id": "define_macro",
    "title": "Определить макрос",
    "category": "Система",
    "kind": "statement",
    "description": "Создаёт директиву #define.",
    "section": "loop",
    "color": "#546E7A",
    "params": [
      {
        "name": "name",
        "type": "string",
        "label": "Имя",
        "default": "LED_PIN"
      },
      {
        "name": "value",
        "type": "string",
        "label": "Значение",
        "default": "13"
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "name": "LED_PIN",
      "value": "13"
    },
    "aliases": [
      "SYS_DEFINE"
    ]
  },
  {
    "id": "task_schedule",
    "title": "Расписание задач",
    "category": "Система",
    "kind": "statement",
    "description": "Добавляет задачу в системный планировщик.",
    "section": "loop",
    "color": "#546E7A",
    "params": [
      {
        "name": "name",
        "type": "string",
        "label": "Задача",
        "default": "task"
      },
      {
        "name": "period_ms",
        "type": "int",
        "label": "Период, мс",
        "min": 1,
        "max": 60000,
        "default": 1000
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "name": "task",
      "period_ms": 1000
    },
    "aliases": [
      "SYS_TASK_SCHEDULE"
    ]
  },
  {
    "id": "pin_mode",
    "title": "Режим пина",
    "category": "Система",
    "kind": "statement",
    "description": "Устанавливает режим работы цифрового пина.",
    "section": "loop",
    "color": "#546E7A",
    "params": [
      {
        "name": "pin",
        "type": "int",
        "label": "Пин",
        "min": 0,
        "max": 53,
        "default": 13
      },
      {
        "name": "mode",
        "type": "enum",
        "label": "Режим",
        "options": [
          "INPUT",
          "OUTPUT",
          "INPUT_PULLUP"
        ],
        "default": "OUTPUT"
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "pin": 13,
      "mode": "OUTPUT"
    },
    "aliases": [
      "SYS_PIN_MODE"
    ]
  },
  {
    "id": "system_mode",
    "title": "Режим/профиль",
    "category": "Система",
    "kind": "statement",
    "description": "Переключает режим или применяет профиль оборудования.",
    "section": "loop",
    "color": "#546E7A",
    "params": [
      {
        "name": "action",
        "type": "enum",
        "label": "Действие",
        "options": [
          "mode",
          "profile"
        ],
        "default": "mode"
      },
      {
        "name": "value",
        "type": "string",
        "label": "Значение",
        "default": "default"
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "action": "mode",
      "value": "default"
    },
    "aliases": [
      "SYS_MODE_SELECT",
      "SYS_PROFILE_APPLY"
    ]
  },
  {
    "id": "every_ms",
    "title": "Каждые N миллисекунд",
    "category": "События",
    "kind": "event",
    "description": "Периодический запуск с заданным интервалом.",
    "section": "events",
    "color": "#607D8B",
    "params": [
      {
        "name": "period_ms",
        "type": "int",
        "label": "Интервал, мс",
        "min": 1,
        "max": 60000,
        "default": 1000
      }
    ],
    "ports": {
      "inputs": [],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "period_ms": 1000
    },
    "aliases": [
      "TIME_EVERY"
    ]
  },
  {
    "id": "on_button",
    "title": "Кнопка",
    "category": "События",
    "kind": "event",
    "description": "Запускается при срабатывании кнопки.",
    "section": "events",
    "color": "#607D8B",
    "params": [
      {
        "name": "pin",
        "type": "int",
        "label": "Пин",
        "min": 0,
        "max": 53,
        "default": 2
      },
      {
        "name": "edge",
        "type": "enum",
        "label": "Событие",
        "options": [
          "pressed",
          "released"
        ],
        "default": "pressed"
      }
    ],
    "ports": {
      "inputs": [],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "pin": 2,
      "edge": "pressed"
    },
    "aliases": []
  },
  {
    "id": "on_start",
    "title": "При старте",
    "category": "События",
    "kind": "event",
    "description": "Запускается один раз при старте программы.",
    "section": "events",
    "color": "#607D8B",
    "params": [],
    "ports": {
      "inputs": [],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {},
    "aliases": []
  },
  {
    "id": "function_call",
    "title": "Вызов функции",
    "category": "Функции",
    "kind": "statement",
    "description": "Вызывает пользовательскую функцию.",
    "section": "loop",
    "color": "#795548",
    "params": [
      {
        "name": "name",
        "type": "string",
        "label": "Имя",
        "default": "myFunction"
      },
      {
        "name": "args",
        "type": "string",
        "label": "Аргументы",
        "default": ""
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "name": "myFunction",
      "args": ""
    },
    "aliases": [
      "FUNC_CALL_01",
      "FUNC_CALL_02",
      "FUNC_CALL_03",
      "FUNC_CALL_04",
      "FUNC_CALL_05",
      "FUNC_CALL_06"
    ]
  },
  {
    "id": "function_define",
    "title": "Определить функцию",
    "category": "Функции",
    "kind": "statement",
    "description": "Создаёт пользовательскую функцию.",
    "section": "functions",
    "color": "#795548",
    "params": [
      {
        "name": "name",
        "type": "string",
        "label": "Имя",
        "default": "myFunction"
      },
      {
        "name": "args",
        "type": "string",
        "label": "Аргументы",
        "default": ""
      }
    ],
    "ports": {
      "inputs": [
        {
          "name": "in",
          "type": "flow"
        }
      ],
      "outputs": [
        {
          "name": "out",
          "type": "flow"
        }
      ]
    },
    "default_params": {
      "name": "myFunction",
      "args": ""
    },
    "aliases": [
      "FUNC_DEFINE_01",
      "FUNC_DEFINE_02",
      "FUNC_DEFINE_03",
      "FUNC_DEFINE_04",
      "FUNC_DEFINE_05",
      "FUNC_DEFINE_06"
    ]
  }
]
